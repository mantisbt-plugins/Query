<?php
error_reporting(-1); //turn on errorreporting

require_once( '../../core.php' );

/** Includes for PHP excel * */
ini_set('include_path', ini_get('include_path') . ';G:\Classes\\');

include 'PHPExcel.php';
require_once 'PHPExcel/IOFactory.php';
include 'PHPExcel/Writer/Excel2007.php';
require_once 'PHPExcel/Cell/AdvancedValueBinder.php';

# This creates a KPI export of all complaints created last week

//PHPExcel_Cell::setValueBinder( new PHPExcel_Cell_AdvancedValueBinder() );

#remove for production untill here


# This creates an excel file 
# listing all open tasks for a group per user

# -- Definitions --
if (!isset($group_id)) {
    #group_id = 46 for WW-CSD
    $group_id = 46;
}
$filename = date(YmdHis) . '.xlsx';
$today = date('Y-m-d');

# -- functions --
if (!function_exists('humandate')) {

    function humandate($d) {
//$date = new DateTime($d);
//return $date->format('d-m-Y H:i');
       // return date('Y-m-d H:i', $d);
        $date = date("Y-m-d H:i", $d);
        return $date;


    }

}
if (!function_exists('getRealname')) {

    function getRealname($id) {
        if ($id <> 0) {
            $q = db_query ("SELECT * FROM mantis_user_table WHERE id = $id");
            $r = db_fetch_array($q);
            return $r['realname'];
        }
        else {
            return '';
        }
    }

}
if (!function_exists('getGroupName')) {

    function getGroupName($id) {
        if ($id <> 0) {
            $q = db_query ("SELECT * FROM mantis_plugin_Usergroups_groups_table WHERE group_id = $id");
            $r = db_fetch_array($q);
            return $r['group_name'];
        }
        else {
            return '';
        }
    }

}


$objPHPExcel = new PHPExcel();
// Set properties
$objPHPExcel->getProperties()->setCreator("SCM");
$objPHPExcel->getProperties()->setLastModifiedBy("SCM");
$objPHPExcel->getProperties()->setTitle("SCM report");
$objPHPExcel->getProperties()->setSubject("SCM open tasks for group");
$objPHPExcel->getProperties()->setDescription("Report generated by SCM");

//border definitions
$styleThinBlackBorderOut = array(
    'borders' => array(
        'outline' => array(
            'style' => PHPExcel_Style_Border::BORDER_THIN,
            'color' => array('argb' => 'FF000000'),
        )
    ),
);
$styleThinBlackBorderAll = array(
    'borders' => array(
        'outline' => array(
            'style' => PHPExcel_Style_Border::BORDER_THIN,
            'color' => array('argb' => 'FF000000'),
        ),
        'inside' => array(
            'style' => PHPExcel_Style_Border::BORDER_THIN,
            'color' => array('argb' => 'FF000000'),
        )
    ),
);
$styleThickBlackBorderOut = array(
    'borders' => array(
        'outline' => array(
            'style' => PHPExcel_Style_Border::BORDER_THICK,
            'color' => array('argb' => 'FF000000'),
        )
    ),
);

$styleThinBlackBorderHor = array(
    'borders' => array(
        'bottom' => array(
            'style' => PHPExcel_Style_Border::BORDER_THIN,
            'color' => array('argb' => 'FF000000'),
        ),
        'inside' => array(
            'style' => PHPExcel_Style_Border::BORDER_THIN,
            'color' => array('argb' => 'FF000000'),
        )
    ),
);

/* new sheet */
// start creating the sheet
$objPHPExcel->setActiveSheetIndex(0);
//$objPHPExcel->getActiveSheet()->mergeCells('B2:D2');
//$objPHPExcel->getActiveSheet()->mergeCells('F2:H2');

//set column widths
$objPHPExcel->getActiveSheet()->getColumnDimension('A')->setWidth('20');
$objPHPExcel->getActiveSheet()->getColumnDimension('B')->setWidth('10');
$objPHPExcel->getActiveSheet()->getColumnDimension('C')->setWidth('10');
$objPHPExcel->getActiveSheet()->getColumnDimension('D')->setWidth('30');
$objPHPExcel->getActiveSheet()->getColumnDimension('E')->setWidth('20');

//set cell data
$objPHPExcel->getActiveSheet()->SetCellValue('A1', 'User');
$objPHPExcel->getActiveSheet()->SetCellValue('B1', 'Complaint');
$objPHPExcel->getActiveSheet()->SetCellValue('C1', 'Task id');
$objPHPExcel->getActiveSheet()->SetCellValue('D1', 'Task title');
$objPHPExcel->getActiveSheet()->SetCellValue('E1', 'Due date');

//$objPHPExcel->getActiveSheet()->getStyle('A1:E2')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_CENTER);

$i = 2; //start at line

$results = db_query ("select * from mantis_plugin_Usergroups_groups_table
join mantis_plugin_Usergroups_usergroup_table on mantis_plugin_Usergroups_usergroup_table.group_id=mantis_plugin_Usergroups_groups_table.group_id
where mantis_plugin_Usergroups_groups_table.group_id=$group_id");

while ($r = db_fetch_array($results)) {
    $uid = $r['user_id'];
    $users = db_query ("select * from mantis_plugin_Tasks_defined_table where task_handler=$uid AND task_completed = '0000-00-00 00:00:00'");
    while ($u = db_fetch_array($users)) {

    $objPHPExcel->getActiveSheet()->SetCellValue('A' . $i, getRealname($uid));
    $objPHPExcel->getActiveSheet()->SetCellValue('B' . $i, $u['bug_id']);
    $objPHPExcel->getActiveSheet()->SetCellValue('C' . $i, $u['task_id']);
    $objPHPExcel->getActiveSheet()->SetCellValue('D' . $i, $u['task_title']);
	$duedate = humandate($u['task_due']);
	$objPHPExcel->getActiveSheet()->SetCellValue('E' . $i, $duedate);
    $i++;
	}
}

//set fonts
$objPHPExcel->getActiveSheet()->getStyle('A1:E1')->getFont()->setSize(10);
$objPHPExcel->getActiveSheet()->getStyle('A1:E1')->getFont()->setBold(true);
$objPHPExcel->getActiveSheet()->getStyle('A2:E' . $i)->getFont()->setSize(10);
//$objPHPExcel->getActiveSheet()->getStyle('A' . $i . ':E' . $i)->getFont()->setBold(true);

//set borders
$objPHPExcel->getActiveSheet()->getStyle('A1:E1')->applyFromArray($styleThinBlackBorderAll);
//$objPHPExcel->getActiveSheet()->getStyle('A' . $i . ':E' . $i)->applyFromArray($styleThinBlackBorderAll);

// Rename sheet
$objPHPExcel->getActiveSheet()->setTitle('Approaching Due date');

//set pagebreaks
$objPHPExcel->getActiveSheet()->setBreak('A30', PHPExcel_Worksheet::BREAK_ROW);
$objPHPExcel->getActiveSheet()->setBreak('E30', PHPExcel_Worksheet::BREAK_COLUMN);

//set page orientation and papersize
$objPHPExcel->getActiveSheet()->getPageSetup()->setOrientation(PHPExcel_Worksheet_PageSetup::ORIENTATION_PORTRAIT);
$objPHPExcel->getActiveSheet()->getPageSetup()->setPaperSize(PHPExcel_Worksheet_PageSetup::PAPERSIZE_A4);
$objPHPExcel->getActiveSheet()->getPageSetup()->setFitToWidth(1);
$objPHPExcel->getActiveSheet()->getPageSetup()->setFitToHeight(0);
// End sheet


$fullfile = config_get('plugin_Query_download_location', 'Query');
$fullfile .= $filename;

//save it
$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');
$objWriter->save($fullfile);

//open it
//header('Content-Type: application/vnd.ms-excel');
//header('Content-Disposition: attachment;filename="' . $filename . '"');
//header('Cache-Control: max-age=0');
//$objWriter = PHPExcel_IOFactory::createWrite($objPHPExcel, 'Excel2007');
//$objWriter->save('php://output');
//exit;


//mail it
//$to = 'dennis.geus@stahl.com';

$from = config_get('plugin_Query_from_address', 'Query');
$recipients = explode(",", $target);
#now retrieve email addresses and fill the TO variable
$fields = count($recipients);
$to = '';

# now create the to address
for ($i = 0; $i < $fields; $i++) {
    if ($i > 0) {
        $to .= ",";
    }
    $username = $recipients[$i];
    $domain = strstr($username, '@');
    if (empty($domain)) {
        $userid = user_get_id_by_name($username);
        $t_email = user_get_email($userid);
    }
    else {
        $t_email = $username;
    }
    if ($t_email <> '') {
        $to .= $t_email;
    }
}
if ($to == '') {
    return false;
}

$today = date("F j, Y, g:i a");
$body = lang_get('plugin_query_body') . " \n\n";
$body .= $filename . " \n\n";
$body .= lang_get('plugin_query_date') . " \n\n";
$body .= $today;

// email fields: to, from, subject, and so on
$subject = "SCM-Report :" . $schedule_name;
$message = date("Y.m.d H:i:s") . "\n 1 attachment";
$headers = "From: $from";
$headers.="Return-Path:$from\r\n";

// boundary
$semi_rand = md5(time());
$mime ary = "==Multipart_Boundary_x{$semi_rand}x";

// headers for attachment
$headers .= "\nMIME-Version: 1.0\n" . "Content-Type: multipart/mixed;\n" . " boundary=\"{$mime ary}\"";

// multipart boundary
$message = "--{$mime ary}\n" . "Content-Type: text/plain; charset=\"iso-8859-1\"\n" .
        "Content-Transfer-Encoding: 7bit\n\n" . $message . "\n\n";

// preparing attachment
if (is_file($fullfile)) {
    $message .= "--{$mime ary}\n";
    $fp = @fopen($fullfile, "rb");
    $data = @fread($fp, filesize($fullfile));
    @fclose($fp);
    $data = chunk_split(base64_encode($data));
    $message .= "Content-Type: application/octet-stream; name=\"" . basename($filename) . "\"\n" .
            "Content-Description: " . basename($filename) . "\n" .
            "Content-Disposition: attachment;\n" . " filename=\"" . basename($filename) . "\"; size=" . filesize($fullfile) . ";\n" .
            "Content-Transfer-Encoding: base64\n\n" . $data . "\n\n";
}
else {
    return false;
}
$returnpath = "-f" . $from;
//mail($to, $subject, $message, $headers, $returnpath);
mail('dennis.geus@stahl.com', $subject, $message, $headers, $returnpath);


#and remove it
unlink($fullfile);

$objPHPExcel->disconnectWorksheets();
unset($objPHPExcel);
