<?php
error_reporting(-1); //turn on errorreporting

require_once( '../../../core.php' );

/** Includes for PHP excel * */
ini_set('include_path', ini_get('include_path') . ';G:\Sites\SCM\Classes\\');

include 'PHPExcel.php';
require_once 'PHPExcel/IOFactory.php';
include 'PHPExcel/Writer/Excel2007.php';
require_once 'PHPExcel/Cell/AdvancedValueBinder.php';
# This creates an excel file with monthly management report
# last month and year to date


#functions
if (!function_exists('dodate')) {
    function dodate($d) {
	$newdate = explode('-', $d);
            $ny = $newdate[0];
            $nm = $newdate[1];
            $nd = $newdate[2];
            return substr($ny . '-' . $nm . '-' . $nd, 0, 10);
    }
}
if (!function_exists('strdate')) {
    function strdate($d) {
		return date('Y-m-d', $d);
    }
}

if (!function_exists('GetCustomField')) {

    function GetCustomField($bugid, $field) {
        $q = db_query("SELECT * FROM mantis_custom_field_string_table WHERE bug_id = $bugid AND field_id=$field");
        $r = db_fetch_array($q);
        return $r['value'];
    }

}

if (!function_exists('getCategory')) {
function getCategory($c) {
    if ($c <> 0) {
        $q = db_query("select name from mantis_category_table WHERE id = $c ");
        $r = db_fetch_array($q);
        return $r['name'];
    }
    else {
        return '';
    }
}
}

if (!function_exists('getBU')) {
function getBU($severity) {
    switch ($severity) {
        case 0:
            $ret = "-";
            break;
        case 5:
            $ret = "N/A";
            break;
        case 8:
            $ret = "Purchases";
            break;
        case 10:
            $ret = "Leather Finish";
            break;
        case 20:
            $ret = "LF Automotive";
            break;
        case 30:
            $ret = "Performance Coatings";
            break;
        case 40:
            $ret = "Pielcolor";
            break;
        case 50:
            $ret = "Picassian";
            break;
        case 60:
            $ret = "Shoe Finish";
            break;
        case 70:
            $ret = "Wet End";
            break;
    }
    return $ret;
}
}

if (!function_exists('getUnit')) {
function getUnit($id) {
    if ($id <> 0) {
        $q = db_query("select name from mantis_project_table WHERE id = $id ");
        $r = db_fetch_array($q);
        return $r['name'];
    }
    else {
        return '';
    }
}
}

if (!function_exists('getStatus')) {
function getStatus($s) {
    switch ($s) {
        case 0:
            $ret = "-";
            break;
        case 10:
            $ret = "New";
            break;
        case 20:
            $ret = "Feedback";
            break;
        case 50:
            $ret = "Assigned";
            break;
        case 80:
            $ret = "Resolved";
            break;
        case 90:
            $ret = "Closed";
            break;
    }
    return $ret;
}
}

if (!function_exists('getJustified')) {
function getJustified($repro) {
    switch ($repro) {
        case 0:
            $ret = "-";
            break;
        case 10:
            $ret = "Not Determined Yet";
            break;
        case 30:
            $ret = "Justified";
            break;
        case 50:
            $ret = "Not Justified";
            break;
        case 70:
            $ret = "Could not be determined";
            break;
    }
    return $ret;
}
}
if (!function_exists('CleanStr')) {

    function CleanStr($str) {
        $nstr = str_replace(config_get('plugin_Query_separator', 'Query'), " ", $str);
        $nstr = str_replace("\n", " ", $nstr);
        $nstr = str_replace("\r", " ", $nstr);
        $nstr = str_replace("=>", " ", $nstr);
		$nstr = trim($nstr);
        return $nstr;
    }
}

//Definitions
//$filename = date(YmdHis) . '.xlsx';
$filename = 'MgtReportCN_'.date(YmdHis) . '.xlsx';
$today = date('Y-m-d');
$thisyear = date('Y');
$thismonth = date('m');
$lastmonth = date('m') - 1;
$now = strtotime($today);
$startofthisyear = strtotime($thisyear . '-1-1');
$pastmonth = strtotime($thisyear . '-' . $lastmonth);

#check if the project_id is set
if (!isset($project_id)) {
    $project_id = 10;
}

#create Excel
$objPHPExcel = new PHPExcel();
// Set properties
$objPHPExcel->getProperties()->setCreator("SCM");
$objPHPExcel->getProperties()->setLastModifiedBy("SCM");
$objPHPExcel->getProperties()->setTitle("SCM Report");
$objPHPExcel->getProperties()->setSubject("Management report CN");
$objPHPExcel->getProperties()->setDescription("Report generated by SCM");

//border definitions
$styleThinBlackBorderOut = array(
    'borders' => array(
        'outline' => array(
            'style' => PHPExcel_Style_Border::BORDER_THIN,
            'color' => array('argb' => 'FF000000'),
        )
    ),
);
$styleThinBlackBorderAll = array(
    'borders' => array(
        'outline' => array(
            'style' => PHPExcel_Style_Border::BORDER_THIN,
            'color' => array('argb' => 'FF000000'),
        ),
        'inside' => array(
            'style' => PHPExcel_Style_Border::BORDER_THIN,
            'color' => array('argb' => 'FF000000'),
        )
    ),
);
$styleThickBlackBorderOut = array(
    'borders' => array(
        'outline' => array(
            'style' => PHPExcel_Style_Border::BORDER_THICK,
            'color' => array('argb' => 'FF000000'),
        )
    ),
);

$styleThinBlackBorderHor = array(
    'borders' => array(
        'bottom' => array(
            'style' => PHPExcel_Style_Border::BORDER_THIN,
            'color' => array('argb' => 'FF000000'),
        ),
        'inside' => array(
            'style' => PHPExcel_Style_Border::BORDER_THIN,
            'color' => array('argb' => 'FF000000'),
        )
    ),
);

/* new sheet */

/* new sheet */
// start creating the sheet

$objPHPExcel->setActiveSheetIndex(0);
$objPHPExcel->getActiveSheet()->mergeCells('A1:J1');

//set column widths
$objPHPExcel->getActiveSheet()->getColumnDimension('A')->setWidth('10');
$objPHPExcel->getActiveSheet()->getColumnDimension('B')->setWidth('20');
$objPHPExcel->getActiveSheet()->getColumnDimension('C')->setWidth('20');
$objPHPExcel->getActiveSheet()->getColumnDimension('D')->setWidth('20');
$objPHPExcel->getActiveSheet()->getColumnDimension('E')->setWidth('20');
$objPHPExcel->getActiveSheet()->getColumnDimension('F')->setWidth('20');
$objPHPExcel->getActiveSheet()->getColumnDimension('G')->setWidth('20');
$objPHPExcel->getActiveSheet()->getColumnDimension('H')->setWidth('20');
$objPHPExcel->getActiveSheet()->getColumnDimension('I')->setWidth('20');
$objPHPExcel->getActiveSheet()->getColumnDimension('J')->setWidth('20');
$objPHPExcel->getActiveSheet()->getColumnDimension('K')->setWidth('20');
$objPHPExcel->getActiveSheet()->getColumnDimension('L')->setWidth('20');



//set cell data
$objPHPExcel->getActiveSheet()->SetCellValue('A1', 'Coordinator Report');

$objPHPExcel->getActiveSheet()->SetCellValue('A2', 'Complaint ID');
$objPHPExcel->getActiveSheet()->SetCellValue('B2', 'Business Unit');
$objPHPExcel->getActiveSheet()->SetCellValue('C2', 'Description');
$objPHPExcel->getActiveSheet()->SetCellValue('D2', 'Task Update');
$objPHPExcel->getActiveSheet()->SetCellValue('E2', 'Comments');
$objPHPExcel->getActiveSheet()->SetCellValue('F2', 'Root Cause');
$objPHPExcel->getActiveSheet()->SetCellValue('G2', 'Task Due date');
$objPHPExcel->getActiveSheet()->SetCellValue('H2', 'Complaint Duedate');
$objPHPExcel->getActiveSheet()->SetCellValue('I2', 'Date Submitted');
$objPHPExcel->getActiveSheet()->SetCellValue('J2', 'Status');
$objPHPExcel->getActiveSheet()->SetCellValue('K2', 'Justified');
$objPHPExcel->getActiveSheet()->SetCellValue('L2', 'Main Type');

$objPHPExcel->getActiveSheet()->getStyle('A1')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_LEFT);

$i = 3; //start line
#loop complaints
$q = db_query("select id,severity,summary,task_changed,task_response,task_due,due_date,date_submitted,status,reproducibility
	from mantis_bug_table as b
	join mantis_plugin_Tasks_defined_table as t on t.bug_id=b.id
	where project_id=$project_id ");
     while ($r = db_fetch_array($q)) {

            $objPHPExcel->getActiveSheet()->SetCellValue('A' . $i, $r['id']);
            $objPHPExcel->getActiveSheet()->SetCellValue('B' . $i, getBU($r['severity']));
            $objPHPExcel->getActiveSheet()->SetCellValue('C' . $i, CleanStr($r['summary']));
            $objPHPExcel->getActiveSheet()->SetCellValue('D' . $i, dodate($r['task_changed']));
			$objPHPExcel->getActiveSheet()->SetCellValue('E' . $i, CleanStr($r['task_response']));
			$objPHPExcel->getActiveSheet()->SetCellValue('F' . $i, GetCustomField($r['id'], 8));
            $objPHPExcel->getActiveSheet()->SetCellValue('G' . $i, dodate($r['task_due']));
            $objPHPExcel->getActiveSheet()->SetCellValue('H' . $i, strdate($r['due_date']));
            $objPHPExcel->getActiveSheet()->SetCellValue('I' . $i, strdate($r['date_submitted']));
            $objPHPExcel->getActiveSheet()->SetCellValue('J' . $i, getStatus($r['status']));
            $objPHPExcel->getActiveSheet()->SetCellValue('K' . $i, getJustified($r['reproducibility']));
            $objPHPExcel->getActiveSheet()->SetCellValue('L' . $i, GetCustomField($r['id'], 3));

            $i++;
        }

//set fonts
$objPHPExcel->getActiveSheet()->getStyle('A1:L2')->getFont()->setSize(10);
$objPHPExcel->getActiveSheet()->getStyle('A1:L2')->getFont()->setBold(true);
$objPHPExcel->getActiveSheet()->getStyle('A3:L' . $i)->getFont()->setSize(10);

//set borders
$objPHPExcel->getActiveSheet()->getStyle('A1:L2')->applyFromArray($styleThinBlackBorderAll);

// Rename sheet
$objPHPExcel->getActiveSheet()->setTitle('Coordinator');

//set pagebreaks
$objPHPExcel->getActiveSheet()->setBreak('A30', PHPExcel_Worksheet::BREAK_ROW);
$objPHPExcel->getActiveSheet()->setBreak('L30', PHPExcel_Worksheet::BREAK_COLUMN);

//set page orientation and papersize
$objPHPExcel->getActiveSheet()->getPageSetup()->setOrientation(PHPExcel_Worksheet_PageSetup::ORIENTATION_PORTRAIT);
$objPHPExcel->getActiveSheet()->getPageSetup()->setPaperSize(PHPExcel_Worksheet_PageSetup::PAPERSIZE_A4);
$objPHPExcel->getActiveSheet()->getPageSetup()->setFitToWidth(1);
$objPHPExcel->getActiveSheet()->getPageSetup()->setFitToHeight(0);
// End sheet

// start creating the sheet
$objPHPExcel->createSheet();

$objPHPExcel->setActiveSheetIndex(1);
$objPHPExcel->getActiveSheet()->mergeCells('A1:G1');

//set column widths
$objPHPExcel->getActiveSheet()->getColumnDimension('A')->setWidth('10');
$objPHPExcel->getActiveSheet()->getColumnDimension('B')->setWidth('15');
$objPHPExcel->getActiveSheet()->getColumnDimension('C')->setWidth('15');
$objPHPExcel->getActiveSheet()->getColumnDimension('D')->setWidth('15');
$objPHPExcel->getActiveSheet()->getColumnDimension('E')->setWidth('50');
$objPHPExcel->getActiveSheet()->getColumnDimension('F')->setWidth('50');
$objPHPExcel->getActiveSheet()->getColumnDimension('G')->setWidth('50');
$objPHPExcel->getActiveSheet()->getColumnDimension('H')->setWidth('50');


//set cell data
$objPHPExcel->getActiveSheet()->SetCellValue('A1', 'Manager Report');

$objPHPExcel->getActiveSheet()->SetCellValue('A2', 'Complaint ID');
$objPHPExcel->getActiveSheet()->SetCellValue('B2', 'Task Due date');
$objPHPExcel->getActiveSheet()->SetCellValue('C2', 'Status');
$objPHPExcel->getActiveSheet()->SetCellValue('D2', 'Complaint Duedate');
$objPHPExcel->getActiveSheet()->SetCellValue('E2', 'Containment actions');
$objPHPExcel->getActiveSheet()->SetCellValue('F2', 'Root Cause Analysis');
$objPHPExcel->getActiveSheet()->SetCellValue('G2', 'Actions to Prevent');
$objPHPExcel->getActiveSheet()->SetCellValue('H2', 'Effectiveness Control');

$objPHPExcel->getActiveSheet()->getStyle('A1')->getAlignment()->setHorizontal(PHPExcel_Style_Alignment::HORIZONTAL_LEFT);

$i = 3; //start line
#loop complaints
$q = db_query("select * from mantis_bug_table as b
	join mantis_plugin_Tasks_defined_table as t on t.bug_id=b.id
	join mantis_plugin_EIGHTD_data_table as e on e.EIGHTD_bug_id=b.id
	where b.project_id=$project_id ");
     while ($r = db_fetch_array($q)) {

            $objPHPExcel->getActiveSheet()->SetCellValue('A' . $i, $r['id']);
            $objPHPExcel->getActiveSheet()->SetCellValue('B' . $i, dodate($r['task_due']));
            $objPHPExcel->getActiveSheet()->SetCellValue('C' . $i, getStatus($r['status']));
			$objPHPExcel->getActiveSheet()->SetCellValue('D' . $i, strdate($r['due_date']));
            $objPHPExcel->getActiveSheet()->SetCellValue('E' . $i, CleanStr($r['d3data']));
            $objPHPExcel->getActiveSheet()->SetCellValue('F' . $i, CleanStr($r['d4data']));
            $objPHPExcel->getActiveSheet()->SetCellValue('G' . $i, CleanStr($r['d7data']));
            $objPHPExcel->getActiveSheet()->SetCellValue('H' . $i, CleanStr($r['d8data']));

            $i++;
        }

//set fonts
$objPHPExcel->getActiveSheet()->getStyle('A1:H2')->getFont()->setSize(10);
$objPHPExcel->getActiveSheet()->getStyle('A1:H2')->getFont()->setBold(true);
$objPHPExcel->getActiveSheet()->getStyle('A3:H' . $i)->getFont()->setSize(10);

$objPHPExcel->getActiveSheet()->getStyle('A3:H'. $i)->getAlignment()->setWrapText(true);

//set borders
$objPHPExcel->getActiveSheet()->getStyle('A1:H2')->applyFromArray($styleThinBlackBorderAll);

// Rename sheet
$objPHPExcel->getActiveSheet()->setTitle('Manager');

//set pagebreaks
$objPHPExcel->getActiveSheet()->setBreak('A30', PHPExcel_Worksheet::BREAK_ROW);
$objPHPExcel->getActiveSheet()->setBreak('H30', PHPExcel_Worksheet::BREAK_COLUMN);

//set page orientation and papersize
$objPHPExcel->getActiveSheet()->getPageSetup()->setOrientation(PHPExcel_Worksheet_PageSetup::ORIENTATION_PORTRAIT);
$objPHPExcel->getActiveSheet()->getPageSetup()->setPaperSize(PHPExcel_Worksheet_PageSetup::PAPERSIZE_A4);
$objPHPExcel->getActiveSheet()->getPageSetup()->setFitToWidth(1);
$objPHPExcel->getActiveSheet()->getPageSetup()->setFitToHeight(0);
// End sheet


//set activesheet back to first one
$objPHPExcel->setActiveSheetIndex(0);

$fullfile = config_get('plugin_Query_download_location', 'Query');
$fullfile .= $filename;

//save it
$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');
$objWriter->save($fullfile);




  $from = config_get('plugin_Query_from_address', 'Query');
  $recipients = explode(",", $target);
  #now retrieve email addresses and fill the TO variable
  $fields = count($recipients);


  $to = '';
  # now create the to address
  for ($i = 0; $i < $fields; $i++) {
  if ($i > 0) {
  $to .= ",";
  }
  $username = $recipients[$i];
  $domain = strstr($username, '@');
  if (empty($domain)) {
  $userid = user_get_id_by_name($username);
  $t_email = user_get_email($userid);
  }
  else {
  $t_email = $username;
  }
  if ($t_email <> '') {
  $to .= $t_email;
  }
  }
  if ($to == '') {
  return false;
  }


  $today = date("F j, Y, g:i a");
  $body = lang_get('plugin_query_body') . " \n\n";
  $body .= $filename . " \n\n";
  $body .= lang_get('plugin_query_date') . " \n\n";
  $body .= $today;

  // email fields: to, from, subject, and so on
  $subject = "SCM-Report :" . $schedule_name;
  $message = date("Y.m.d H:i:s") . "\n 1 attachment";
$headers = "From: $from"."\r\n";
$headers.="Return-Path: $from"."\r\n";

  // boundary
  $semi_rand = md5(time());
  $mime_boundary = "==Multipart_Boundary_x{$semi_rand}x";

  // headers for attachment
  $headers .= "\nMIME-Version: 1.0\n" . "Content-Type: multipart/mixed;\n" . " boundary=\"{$mime_boundary}\"";

  // multipart boundary
  $message = "--{$mime_boundary}\n" . "Content-Type: text/plain; charset=\"iso-8859-1\"\n" .
  "Content-Transfer-Encoding: 7bit\n\n" . $message . "\n\n";


  //mail it
  $to = 'rik.kleinloog@stahl.com';

  // preparing attachment
  if (is_file($fullfile)) {
  $message .= "--{$mime_boundary}\n";
  $fp = @fopen($fullfile, "rb");
  $data = @fread($fp, filesize($fullfile));
  @fclose($fp);
  $data = chunk_split(base64_encode($data));
  $message .= "Content-Type: application/octet-stream; name=\"" . basename($filename) . "\"\n" .
  "Content-Description: " . basename($filename) . "\n" .
  "Content-Disposition: attachment;\n" . " filename=\"" . basename($filename) . "\"; size=" . filesize($fullfile) . ";\n" .
  "Content-Transfer-Encoding: base64\n\n" . $data . "\n\n";
  }
  else {
  return false;
  }
  $returnpath = "-f" . $from;
mail($to, $subject, $message, $headers, $returnpath);


#and remove it
unlink($fullfile);

$objPHPExcel->disconnectWorksheets();
unset($objPHPExcel);
